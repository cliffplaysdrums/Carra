/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scheduler;

import java.sql.SQLException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import static scheduler.GUI._currentUser;
import static scheduler.GUI._userInfo;

/**
 *
 * @author Ayomitunde
 */
public class ListEvents extends javax.swing.JFrame {

    static String[] lister = {"Event Name", "Event Description"};
    int _eventCount = _userInfo.get(_currentUser).size();
    static DefaultTableModel _listerModel = new DefaultTableModel();

    /**
     * Creates new form ListEvents
     */
    public ListEvents() {
        initComponents();
        tblListEvents.getTableHeader().setResizingAllowed(false);
        tblListEvents.getTableHeader().setReorderingAllowed(false);
        tblListEvents.setColumnSelectionAllowed(true);
        tblListEvents.setRowSelectionAllowed(true);
        tblListEvents.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        _eventCount = _userInfo.get(_currentUser).size();
        _listerModel = new DefaultTableModel(lister, _eventCount);
        listEvent();
    }

    private void listEvent() {
        int i = 0;
        for (Iterator<Event> it = _userInfo.get(_currentUser).iterator(); it.hasNext();) {
            Event e = it.next();
            ListEvents._listerModel.setValueAt(e.getEventName(), i, 0);
            ListEvents._listerModel.setValueAt(e.getEventDescription(), i, 1);
            i++;
        }
    }

    private void clear() {
        for (int i = 0; i < _listerModel.getRowCount(); i++) {
            _listerModel.setValueAt(null, i, 0);
            _listerModel.setValueAt(null, i, 1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListEvents = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            };
        };
        btnDelete = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Events");
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        tblListEvents.setModel(_listerModel);
        tblListEvents.setRowHeight(22);
        jScrollPane3.setViewportView(tblListEvents);

        jPanel1.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblListEvents.getSelectedRow();
        int column = tblListEvents.getSelectedColumn();
        if (_listerModel.getValueAt(row, column) != null) {
            Object selected = _listerModel.getValueAt(row, column).toString();
            Object other = null;
            Event e = null;
            if (column > 0) {
                other = _listerModel.getValueAt(row, 0).toString();
                for (Iterator<Event> it = _userInfo.get(_currentUser).iterator(); it.hasNext();) {
                    e = it.next();
                    if (e.getEventName().equals(other) && e.getEventDescription().equals(selected)) {
                        try {
                            it.remove();
                            dbModel.deleteEvent(e.getEventName(), e.getEventTime());
                        } catch (SQLException ex) {
                            Logger.getLogger(ListEvents.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            } else {
                other = _listerModel.getValueAt(row, 1).toString();
                for (Iterator<Event> it = _userInfo.get(_currentUser).iterator(); it.hasNext();) {
                    e = it.next();
                    if (e.getEventName().equals(selected) && e.getEventDescription().equals(other)) {
                        try {
                            it.remove();
                            dbModel.deleteEvent(e.getEventName(), e.getEventTime());
                        } catch (SQLException ex) {
                            Logger.getLogger(ListEvents.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            Serialize.saveUserFiles(Serialize._fileLocation);
            clear();
            listEvent();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListEvents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private static javax.swing.JTable tblListEvents;
    // End of variables declaration//GEN-END:variables
}
